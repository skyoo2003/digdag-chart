apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "digdag.fullname" . }}
  labels:
    {{- include "digdag.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "digdag.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "digdag.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "digdag.serviceAccountName" . }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml  | nindent 8 }}
      containers:
      - name: digdag
        securityContext: {{- omit .Values.securityContext "enabled" | toYaml | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.image.command }}
        command: {{- toYaml .Values.image.command | nindent 10 }}
        {{- end }}
        {{- if .Values.image.args }}
        args: {{- toYaml .Values.image.args | nindent 10 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 65432
          protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /api/version
            port: http
            scheme: HTTP
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /api/workflows?count=1
            port: http
            scheme: HTTP
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.envs }}
        env:
          {{- toYaml .Values.envs | nindent 12 }}
        {{- end }}
        volumeMounts:
        - name: digdag
          mountPath: /opt/etc/digdag
          readOnly: true
        {{- if .Values.volumeMounts }}
          {{- toYaml .Values.volumeMounts | nindent 8 }}
        {{- end }}
      {{- if and .Values.metrics.enabled .Values.jmx.enabled }}
      - name: metrics
        image: "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        - name: SERVICE_PORT
          value: "5556"
        ports:
        - name: metrics
          containerPort: 5556
          protocol: TCP
        {{- if .Values.metrics.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.metrics.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        volumeMounts:
        - name: jmx-exporter-config
          mountPath: /opt/jmx_exporter/config.yml
          subPath: config.yml
      {{- end }}
      volumes:
      - name: digdag
        configMap:
          name: {{ include "digdag.fullname" .}}
      {{- if and .Values.metrics.enabled .Values.jmx.enabled }}
      - name: jmx-exporter-config
        configMap:
          name: {{ include "digdag.fullname" . }}-jmx-exporter
      {{- end }}
      {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
